// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportskeAktivnosti.Models.Database;

namespace SportskeAktivnosti.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200205225902_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SportskeAktivnosti.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Beograd"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Novi Sad"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 2,
                            Name = "Zagreb"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 3,
                            Name = "Sarajevo"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 4,
                            Name = "Podgorica"
                        });
                });

            modelBuilder.Entity("SportskeAktivnosti.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Srbija"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hrvatska"
                        },
                        new
                        {
                            Id = 3,
                            Name = "BiH"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Crna Gora"
                        });
                });

            modelBuilder.Entity("SportskeAktivnosti.Models.Sport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fudbal"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Kosarka"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tenis"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Teretana"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Bazen"
                        });
                });

            modelBuilder.Entity("SportskeAktivnosti.Models.SportObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PriceForHour")
                        .HasColumnType("int");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("WorkEnds")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("WorkStarts")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("SportId");

                    b.ToTable("SportObjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "test1 adresa",
                            CityId = 1,
                            Email = "test1@test.com",
                            Name = "Test1",
                            Phone = "0652001",
                            PriceForHour = 4000,
                            SportId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "test2 adresa",
                            CityId = 1,
                            Email = "test2@test.com",
                            Name = "Test2",
                            Phone = "0652001",
                            PriceForHour = 4000,
                            SportId = 1
                        },
                        new
                        {
                            Id = 3,
                            Address = "test3 adresa",
                            CityId = 1,
                            Email = "test3@test.com",
                            Name = "Test3",
                            Phone = "0652001",
                            PriceForHour = 4000,
                            SportId = 1
                        },
                        new
                        {
                            Id = 4,
                            Address = "test4 adresa",
                            CityId = 1,
                            Email = "test4@test.com",
                            Name = "Test4",
                            Phone = "0652001",
                            PriceForHour = 4000,
                            SportId = 2
                        },
                        new
                        {
                            Id = 5,
                            Address = "test5 adresa",
                            CityId = 1,
                            Email = "test5@test.com",
                            Name = "Test5",
                            Phone = "0652001",
                            PriceForHour = 4000,
                            SportId = 3
                        },
                        new
                        {
                            Id = 6,
                            Address = "test6 adresa",
                            CityId = 1,
                            Email = "test6@test.com",
                            Name = "Test6",
                            Phone = "0652001",
                            PriceForHour = 4000,
                            SportId = 4
                        },
                        new
                        {
                            Id = 7,
                            Address = "test7 adresa",
                            CityId = 1,
                            Email = "test7@test.com",
                            Name = "Test7",
                            Phone = "0652001",
                            PriceForHour = 4000,
                            SportId = 5
                        });
                });

            modelBuilder.Entity("SportskeAktivnosti.Models.SportSchool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("SportId");

                    b.ToTable("SportSchools");
                });

            modelBuilder.Entity("SportskeAktivnosti.Models.Tournament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriceParticipation")
                        .HasColumnType("int");

                    b.Property<int>("PricePerGame")
                        .HasColumnType("int");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("SportId");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("SportskeAktivnosti.Models.City", b =>
                {
                    b.HasOne("SportskeAktivnosti.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SportskeAktivnosti.Models.SportObject", b =>
                {
                    b.HasOne("SportskeAktivnosti.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SportskeAktivnosti.Models.Sport", "Sport")
                        .WithMany()
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SportskeAktivnosti.Models.SportSchool", b =>
                {
                    b.HasOne("SportskeAktivnosti.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SportskeAktivnosti.Models.Sport", "Sport")
                        .WithMany()
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SportskeAktivnosti.Models.Tournament", b =>
                {
                    b.HasOne("SportskeAktivnosti.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SportskeAktivnosti.Models.Sport", "Sport")
                        .WithMany()
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
